{"ast":null,"code":"var _jsxFileName = \"/Users/victoria.clark/Desktop/Website/familygame/src/components/grid/CompletedRow.tsx\";\nimport { getGuessStatuses } from '../../lib/statuses';\nimport { Cell } from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompletedRow = _ref => {\n  let {\n    guess,\n    isRevealing\n  } = _ref;\n  const statuses = getGuessStatuses(guess);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center mb-1\",\n    children: guess.split('').map((letter, i) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: letter,\n      status: statuses[i],\n      position: i,\n      isRevealing: isRevealing,\n      isCompleted: true\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = CompletedRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompletedRow\");","map":{"version":3,"sources":["/Users/victoria.clark/Desktop/Website/familygame/src/components/grid/CompletedRow.tsx"],"names":["getGuessStatuses","Cell","CompletedRow","guess","isRevealing","statuses","split","map","letter","i"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;;AAOA,OAAO,MAAMC,YAAY,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAkC;AAC7D,QAAMC,QAAQ,GAAGL,gBAAgB,CAACG,KAAD,CAAjC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,cACGA,KAAK,CAACG,KAAN,CAAY,EAAZ,EAAgBC,GAAhB,CAAoB,CAACC,MAAD,EAASC,CAAT,kBACnB,QAAC,IAAD;AAEE,MAAA,KAAK,EAAED,MAFT;AAGE,MAAA,MAAM,EAAEH,QAAQ,CAACI,CAAD,CAHlB;AAIE,MAAA,QAAQ,EAAEA,CAJZ;AAKE,MAAA,WAAW,EAAEL,WALf;AAME,MAAA,WAAW;AANb,OACOK,CADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAjBM;KAAMP,Y","sourcesContent":["import { getGuessStatuses } from '../../lib/statuses'\nimport { Cell } from './Cell'\n\ntype Props = {\n  guess: string\n  isRevealing?: boolean\n}\n\nexport const CompletedRow = ({ guess, isRevealing }: Props) => {\n  const statuses = getGuessStatuses(guess)\n\n  return (\n    <div className=\"flex justify-center mb-1\">\n      {guess.split('').map((letter, i) => (\n        <Cell\n          key={i}\n          value={letter}\n          status={statuses[i]}\n          position={i}\n          isRevealing={isRevealing}\n          isCompleted\n        />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}