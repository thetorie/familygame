{"ast":null,"code":"import{getGuessStatuses}from'./statuses';import{solutionIndex}from'./words';import{GAME_TITLE}from'../constants/strings';export var shareStatus=function shareStatus(guesses,lost,isHardMode){navigator.clipboard.writeText(\"\".concat(GAME_TITLE,\" \").concat(solutionIndex,\" \").concat(lost?'X':guesses.length,\"/6\").concat(isHardMode?'*':'',\"\\n\\n\")+generateEmojiGrid(guesses));};export var generateEmojiGrid=function generateEmojiGrid(guesses){return guesses.map(function(guess){var status=getGuessStatuses(guess);return guess.split('').map(function(_,i){switch(status[i]){case'correct':return'ğŸŸ©';case'present':return'ğŸŸ¨';default:return'â¬œ';}}).join('');}).join('\\n');};","map":{"version":3,"sources":["/Users/victoria.clark/Desktop/Website/familygame/src/lib/share.ts"],"names":["getGuessStatuses","solutionIndex","GAME_TITLE","shareStatus","guesses","lost","isHardMode","navigator","clipboard","writeText","length","generateEmojiGrid","map","guess","status","split","_","i","join"],"mappings":"AAAA,OAASA,gBAAT,KAAiC,YAAjC,CACA,OAASC,aAAT,KAA8B,SAA9B,CACA,OAASC,UAAT,KAA2B,sBAA3B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CACzBC,OADyB,CAEzBC,IAFyB,CAGzBC,UAHyB,CAItB,CACHC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CACE,UAAGP,UAAH,aAAiBD,aAAjB,aAAkCI,IAAI,CAAG,GAAH,CAASD,OAAO,CAACM,MAAvD,cACEJ,UAAU,CAAG,GAAH,CAAS,EADrB,SAESK,iBAAiB,CAACP,OAAD,CAH5B,EAKD,CAVM,CAYP,MAAO,IAAMO,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACP,OAAD,CAAuB,CACtD,MAAOA,CAAAA,OAAO,CACXQ,GADI,CACA,SAACC,KAAD,CAAW,CACd,GAAMC,CAAAA,MAAM,CAAGd,gBAAgB,CAACa,KAAD,CAA/B,CACA,MAAOA,CAAAA,KAAK,CACTE,KADI,CACE,EADF,EAEJH,GAFI,CAEA,SAACI,CAAD,CAAIC,CAAJ,CAAU,CACb,OAAQH,MAAM,CAACG,CAAD,CAAd,EACE,IAAK,SAAL,CACE,MAAO,IAAP,CACF,IAAK,SAAL,CACE,MAAO,IAAP,CACF,QACE,MAAO,GAAP,CANJ,CAQD,CAXI,EAYJC,IAZI,CAYC,EAZD,CAAP,CAaD,CAhBI,EAiBJA,IAjBI,CAiBC,IAjBD,CAAP,CAkBD,CAnBM","sourcesContent":["import { getGuessStatuses } from './statuses'\nimport { solutionIndex } from './words'\nimport { GAME_TITLE } from '../constants/strings'\n\nexport const shareStatus = (\n  guesses: string[],\n  lost: boolean,\n  isHardMode: boolean\n) => {\n  navigator.clipboard.writeText(\n    `${GAME_TITLE} ${solutionIndex} ${lost ? 'X' : guesses.length}/6${\n      isHardMode ? '*' : ''\n    }\\n\\n` + generateEmojiGrid(guesses)\n  )\n}\n\nexport const generateEmojiGrid = (guesses: string[]) => {\n  return guesses\n    .map((guess) => {\n      const status = getGuessStatuses(guess)\n      return guess\n        .split('')\n        .map((_, i) => {\n          switch (status[i]) {\n            case 'correct':\n              return 'ğŸŸ©'\n            case 'present':\n              return 'ğŸŸ¨'\n            default:\n              return 'â¬œ'\n          }\n        })\n        .join('')\n    })\n    .join('\\n')\n}\n"]},"metadata":{},"sourceType":"module"}