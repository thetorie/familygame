{"ast":null,"code":"var _jsxFileName = \"/Users/victoria.clark/Desktop/Website/familygame/src/components/grid/Grid.tsx\";\nimport { MAX_CHALLENGES } from '../../constants/settings';\nimport { CompletedRow } from './CompletedRow';\nimport { CurrentRow } from './CurrentRow';\nimport { EmptyRow } from './EmptyRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Grid = _ref => {\n  let {\n    guesses,\n    currentGuess,\n    isRevealing\n  } = _ref;\n  const empties = guesses.length < MAX_CHALLENGES - 1 ? Array.from(Array(MAX_CHALLENGES - 1 - guesses.length)) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-6\",\n    children: [guesses.map((guess, i) => /*#__PURE__*/_jsxDEV(CompletedRow, {\n      guess: guess,\n      isRevealing: isRevealing && guesses.length - 1 === i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), guesses.length < MAX_CHALLENGES && /*#__PURE__*/_jsxDEV(CurrentRow, {\n      guess: currentGuess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 43\n    }, this), empties.map((_, i) => /*#__PURE__*/_jsxDEV(EmptyRow, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/victoria.clark/Desktop/Website/familygame/src/components/grid/Grid.tsx"],"names":["MAX_CHALLENGES","CompletedRow","CurrentRow","EmptyRow","Grid","guesses","currentGuess","isRevealing","empties","length","Array","from","map","guess","i","_"],"mappings":";AAAA,SAASA,cAAT,QAA+B,0BAA/B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAQA,OAAO,MAAMC,IAAI,GAAG,QAAmD;AAAA,MAAlD;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,GAAkD;AACrE,QAAMC,OAAO,GACXH,OAAO,CAACI,MAAR,GAAiBT,cAAc,GAAG,CAAlC,GACIU,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACV,cAAc,GAAG,CAAjB,GAAqBK,OAAO,CAACI,MAA9B,CAAhB,CADJ,GAEI,EAHN;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACGJ,OAAO,CAACO,GAAR,CAAY,CAACC,KAAD,EAAQC,CAAR,kBACX,QAAC,YAAD;AAEE,MAAA,KAAK,EAAED,KAFT;AAGE,MAAA,WAAW,EAAEN,WAAW,IAAIF,OAAO,CAACI,MAAR,GAAiB,CAAjB,KAAuBK;AAHrD,OACOA,CADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAQGT,OAAO,CAACI,MAAR,GAAiBT,cAAjB,iBAAmC,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEM;AAAnB;AAAA;AAAA;AAAA;AAAA,YARtC,EASGE,OAAO,CAACI,GAAR,CAAY,CAACG,CAAD,EAAID,CAAJ,kBACX,QAAC,QAAD,MAAeA,CAAf;AAAA;AAAA;AAAA;AAAA,YADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArBM;KAAMV,I","sourcesContent":["import { MAX_CHALLENGES } from '../../constants/settings'\nimport { CompletedRow } from './CompletedRow'\nimport { CurrentRow } from './CurrentRow'\nimport { EmptyRow } from './EmptyRow'\n\ntype Props = {\n  guesses: string[]\n  currentGuess: string\n  isRevealing?: boolean\n}\n\nexport const Grid = ({ guesses, currentGuess, isRevealing }: Props) => {\n  const empties =\n    guesses.length < MAX_CHALLENGES - 1\n      ? Array.from(Array(MAX_CHALLENGES - 1 - guesses.length))\n      : []\n\n  return (\n    <div className=\"pb-6\">\n      {guesses.map((guess, i) => (\n        <CompletedRow\n          key={i}\n          guess={guess}\n          isRevealing={isRevealing && guesses.length - 1 === i}\n        />\n      ))}\n      {guesses.length < MAX_CHALLENGES && <CurrentRow guess={currentGuess} />}\n      {empties.map((_, i) => (\n        <EmptyRow key={i} />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}